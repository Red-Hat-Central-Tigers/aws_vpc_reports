- name: "{{ ec2_region }} - {{ vpc.vpc_id }} - Get ec2 instance information"
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      vpc-id: "{{ vpc.vpc_id }}"
  register: ec2_instances

- block:
  - debug:
      msg: "Days since Launch: {{ (((ansible_date_time.iso8601 | replace('T', ' '))[0:19] | to_datetime) - (((ec2_instances.instances | first).launch_time | replace('T', ' '))[0:19] | to_datetime)).days }}"

  - include_tasks: tasks/nuke/teardown.yml
    when: 
      - (((ansible_date_time.iso8601 | replace('T', ' '))[0:19] | to_datetime) - (((ec2_instances.instances | first).launch_time | replace('T', ' '))[0:19] | to_datetime)).days > 2
      - ((ec2_instances.instances | first).tags.Workshop_type) is defined
      - (ec2_instances.instances | first).tags.AWS_USERNAME == "GPTE" 
    vars:
      ec2_name_prefix: "{{ (ec2_instances.instances | first).tags.Workshop }}"
      workshop_type: "{{ (ec2_instances.instances | first).tags.Workshop_type }}"
      student_total: "{{ (ec2_instances.instances | first).tags.Students }}"
      ec2_az: "{{ ec2_region }}a"
      ec2_subnet: "172.16.0.0/16"
      ec2_subnet2: "172.17.0.0/16"
      ec2_vpc_id: "{{ vpc.vpc_id }}"

  when:
    - (ec2_instances.instances | first).tags.AWS_USERNAME == "GPTE" 
  any_errors_fatal: false

- block:
  - debug:
      msg: "Seconds since Launch: {{ (((ansible_date_time.iso8601 | replace('T', ' '))[0:19] | to_datetime) - (((ec2_instances.instances | first).launch_time | replace('T', ' '))[0:19] | to_datetime)).seconds }}"

  - include_tasks: tasks/nuke/teardown.yml
    when: 
      - (((ansible_date_time.iso8601 | replace('T', ' '))[0:19] | to_datetime) - (((ec2_instances.instances | first).launch_time | replace('T', ' '))[0:19] | to_datetime)).seconds > 21600
      - ((ec2_instances.instances | first).tags.Workshop_type) is defined
    vars:
      ec2_name_prefix: "{{ (ec2_instances.instances | first).tags.Workshop }}"
      workshop_type: "{{ (ec2_instances.instances | first).tags.Workshop_type }}"
      student_total: "{{ (ec2_instances.instances | first).tags.Students }}"
      ec2_az: "{{ ec2_region }}a"
      ec2_subnet: "172.16.0.0/16"
      ec2_subnet2: "172.17.0.0/16"
      ec2_vpc_id: "{{ vpc.vpc_id }}"

  when:
    - (ec2_instances.instances | first).tags.Name.startswith('tqe-gating-') 
  any_errors_fatal: false
    
